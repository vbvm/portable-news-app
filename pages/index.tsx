import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import styles from '../styles/Home.module.css'
import { BookmarkManager } from './bookmark/BookmarkManager';
import { AggregatedNewsSearchResults } from './search/common/AggregatedNewsSearchResults';
import { NewsSearchResultSet } from './search/common/NewsSearchResultSet';
import NewsSearchResultModel from './search/models/NewsSearchResultModel';

const pageStyles = {
  searchBox: {
  },
  searchResult: {
    backgroundColor: 'rgb(240, 248, 255)',
    marginLeft: '25px',
    paddingLeft: '5px'
  },
  searchResultSection: {
    backgroundColor: 'rgb(240, 255, 240)',
    paddingLeft: '15px',
    paddingTop: '5px'
  },
  searchButton: {},
  searchResultsContainer: {
    height: '50vh',
    overflowY: 'scroll'
  },
  separator: {
    width: '100%',
    height: '1px',
    backgroundColor: 'gray',
    marginTop: '25px',
    marginBottom: '15px'
  }
};

const bookmarkManager = new BookmarkManager();

export default function Home() {

  const [searchTerm, setSearchTerm] = useState('');
  const [searchResults, setSearchResults] = useState(new AggregatedNewsSearchResults());
  const doSearch = () => {
    fetch(
      '/api/news/search?query=' + encodeURIComponent(searchTerm),
      {
        method: 'GET'
      }
    ).then(response => {
      response.json().then(jsonObj => {
        setSearchResults(AggregatedNewsSearchResults.fromString(jsonObj.searchResults));
      });
    });
  };

  var sections = searchResults.getGroupedBySection();
  var bookmarks = bookmarkManager.bookmarks;

  var hasSearchResults = !searchResults.isEmpty();
  var hasBookmarks = !bookmarkManager.isEmpty();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* Welcome Msg */}
        <h1 className={styles.title}>
          Welcome to News Search App
        </h1>

        <p className={styles.description}>
          Find news articles across dozens of reliable sources!
        </p>

        {/*Search UI */}

        <div style={{ display: 'flex', flexDirection: 'row' }}>
          <input
            style={pageStyles.searchBox}
            type="text"
            value={searchTerm}
            onChange={e => setSearchTerm(e.target.value)}
            placeholder={'What do you want to find?'}
          />
          <div style={{ marginRight: '20px' }}></div>
          <button
            style={pageStyles.searchButton}
            onClick={doSearch}
          >
            Search
          </button>
        </div>

        {/* Search Results */}
        {
          hasSearchResults &&
          <>
            <div style={pageStyles.separator}></div>
            <h3>Search Results</h3>
            <div style={pageStyles.searchResultsContainer}>
              {
                Object.keys(sections).map(function (sectionName: string) {
                  const searchResultItemsInThisSection: Array<NewsSearchResultModel>
                    = sections[sectionName];

                  const innerResults = searchResultItemsInThisSection.map(function (searchResult: NewsSearchResultModel, i) {
                    return (
                      <div key={i} style={pageStyles.searchResult}>
                        <button onClick={e => {
                          bookmarkManager.addBookmark(searchResult)
                        }}>
                          Bookmark
                        </button>
                        <p>{searchResult.data.title}</p>
                        <p>{searchResult.data.publicationDate}</p>
                        <p>{searchResult.data.link}</p>
                      </div>
                    )
                  });

                  return (
                    <div key={sectionName} style={pageStyles.searchResultSection}>
                      <h4>{sectionName}</h4>
                      {innerResults}
                    </div>
                  )
                })
              }
            </div>
          </>
        }
        {
          hasBookmarks &&
          <>
            <div style={pageStyles.separator}></div>
            <h3>Bookmarks</h3>
            <div style={pageStyles.searchResultsContainer}>
              {
                Object.keys(bookmarks).map(function (itemId: string) {
                  const searchResult: NewsSearchResultModel
                    = bookmarks[itemId];

                  return (
                    <div key={itemId} style={pageStyles.searchResult}>
                      <button onClick={e => {
                        bookmarkManager.removeBookmark(searchResult)
                      }}>
                        Remove Bookmark
                      </button>
                      <p>{searchResult.data.title}</p>
                      <p>{searchResult.data.publicationDate}</p>
                      <p>{searchResult.data.link}</p>
                    </div>
                  )
                })
              }
            </div>
          </>
        }

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
